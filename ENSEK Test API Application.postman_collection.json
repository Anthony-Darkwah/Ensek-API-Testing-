{
	"info": {
		"_postman_id": "36a654e5-d88b-4bbe-a667-dc7b09433067",
		"name": "ENSEK Test API Application",
		"description": "Purchase Application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3807941"
	},
	"item": [
		{
			"name": "post login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logged in \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test('has a token', function () {\r",
							"    const {access_token} = pm.response.json();\r",
							"    pm.environment.set('token', access_token);\r",
							"    return 'token';\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"test\",\n  \"password\": \"testing\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				},
				"description": "Use to obtain an Bearer access token."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"testing\",\n  \"username\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "//login",
							"path": [
								"",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"testing\",\n  \"username\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"testing\",\n  \"username\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "post reset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200,201);\r",
							"});\r",
							"pm.test(\"Body matches string 'Success'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reset",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reset"
					]
				},
				"description": "Use to reset the test data back to its initial state"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "//reset",
							"path": [
								"",
								"reset"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reset"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get orders before current date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var data = pm.response.json();\r",
							"\r",
							"pm.test('Number of orders returned before current date = ' + data.length, function (){\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders?",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Use to obtain details of previous orders."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get energy before purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/energy",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"energy"
					]
				},
				"description": "Use to obtain details on energy types."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/energy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"energy"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "put buy electric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string - purchased 100 kWh\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"purchased 100 kWh\");\r",
							"});\r",
							"pm.test(\"Body matches string - 4222 units remaining\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"4222 units remaining\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/buy/:id/:quantity",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"buy",
						":id",
						":quantity"
					],
					"variable": [
						{
							"key": "id",
							"value": "3"
						},
						{
							"key": "quantity",
							"value": "100"
						}
					]
				},
				"description": "Use to purchase energy units."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "5",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "17978637",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "17978637",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "put buy gas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body should match string- purchsed 200\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"purchsed 200\");\r",
							"});\r",
							"pm.test(\"Body should match string - 2800 units remaining\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2800 units remaining\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/buy/:id/:quantity",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"buy",
						":id",
						":quantity"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						},
						{
							"key": "quantity",
							"value": "200"
						}
					]
				},
				"description": "Use to purchase energy units."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "5",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "17978637",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "17978637",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "put buy nuclear",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"no nuclear fuel to purchase\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/buy/:id/:quantity",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"buy",
						":id",
						":quantity"
					],
					"variable": [
						{
							"key": "id",
							"value": "2"
						},
						{
							"key": "quantity",
							"value": "20"
						}
					]
				},
				"description": "Use to purchase energy units."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "5",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "17978637",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "17978637",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "put buy oil",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string - purchased 3\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"purchased 3\");\r",
							"});\r",
							"pm.test(\"Body matches string - 17 units remaining\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"17 units remaining\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/buy/:id/:quantity",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"buy",
						":id",
						":quantity"
					],
					"variable": [
						{
							"key": "id",
							"value": "4"
						},
						{
							"key": "quantity",
							"value": "3"
						}
					]
				},
				"description": "Use to purchase energy units."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "5",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/buy/:id/:quantity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"buy",
								":id",
								":quantity"
							],
							"variable": [
								{
									"key": "id",
									"value": "17978637",
									"description": "(Required) Energy type identifier."
								},
								{
									"key": "quantity",
									"value": "17978637",
									"description": "(Required) Quantity to purchase."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get orders after purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var data = pm.response.json();\r",
							"\r",
							"pm.test('Number of orders returned = ' + data.length, function (){\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders?",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Use to obtain details of previous orders."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "//orders",
							"path": [
								"",
								"orders"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get energy after purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/energy",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"energy"
					]
				},
				"description": "Use to obtain details on energy types."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "//energy",
							"path": [
								"",
								"energy"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://ensekapicandidatetest.azurewebsites.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}